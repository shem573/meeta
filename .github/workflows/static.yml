
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MEETA</title>
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            /* Color Variables */
            --color-dark: #111111;
            --color-darker: #0a0a0a;
            --color-light: #ffffff;
            --color-lighter: #f5f5f5;
            --color-accent: #00f7ff;
            --color-accent-dark: #00c0cc;
            --color-gray: #1a1a1a;
            --color-gray-light: #2a2a2a;
            --color-text: var(--color-light);
            --color-bg: var(--color-dark);
            --color-success: #4CAF50;
            --color-error: #F44336;
            --color-warning: #FF9800;
            
            /* Spacing */
            --space-xs: 0.5rem;
            --space-sm: 1rem;
            --space-md: 1.5rem;
            --space-lg: 2rem;
            --space-xl: 4rem;
            
            /* Typography */
            --text-base: 1rem;
            --text-lg: 1.125rem;
            --text-xl: 1.25rem;
            --text-2xl: 1.5rem;
            --text-3xl: 2rem;
            --text-4xl: 3rem;
            
            /* Shadows */
            --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.12);
            --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 25px rgba(0, 0, 0, 0.1);
            
            /* Transitions */
            --transition-fast: 0.2s ease;
            --transition-normal: 0.3s ease;
            --transition-slow: 0.5s ease;
            
            /* Border Radius */
            --radius-sm: 5px;
            --radius-md: 8px;
            --radius-lg: 12px;
        }

        /* Light Mode Variables */
        [data-theme="light"] {
            --color-text: var(--color-dark);
            --color-bg: var(--color-lighter);
            --color-gray: #e0e0e0;
            --color-gray-light: #f0f0f0;
        }

        /* Base Styles */
        *,
        *::before,
        *::after {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Outfit', system-ui, -apple-system, sans-serif;
            line-height: 1.6;
            color: var(--color-text);
            background-color: var(--color-bg);
            transition: 
                background-color var(--transition-normal),
                color var(--transition-normal);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Typography */
        h1, h2, h3, h4 {
            line-height: 1.2;
            font-weight: 700;
        }

        h1 { font-size: var(--text-4xl); }
        h2 { font-size: var(--text-3xl); }
        h3 { font-size: var(--text-2xl); }
        h4 { font-size: var(--text-xl); }

        a {
            color: inherit;
            text-decoration: none;
            transition: color var(--transition-fast);
        }

        /* Layout */
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 var(--space-md);
        }

        /* Header */
        .header {
            position: sticky;
            top: 0;
            z-index: 1000;
            background-color: var(--color-darker);
            box-shadow: var(--shadow-sm);
            padding: var(--space-sm) 0;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-weight: 700;
            font-size: var(--text-xl);
            color: var(--color-accent);
            display: flex;
            align-items: center;
            gap: var(--space-xs);
        }

        .nav {
            display: flex;
            align-items: center;
            gap: var(--space-lg);
        }

        .nav-list {
            display: flex;
            gap: var(--space-lg);
            list-style: none;
        }

        .nav-link {
            position: relative;
            padding: var(--space-xs) 0;
            font-weight: 500;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--color-accent);
            transition: width var(--transition-fast);
        }

        .nav-link:hover::after,
        .nav-link:focus::after {
            width: 100%;
        }

        .user-actions {
            display: flex;
            align-items: center;
            gap: var(--space-sm);
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: var(--space-xs) var(--space-sm);
            border-radius: var(--radius-sm);
            font-weight: 600;
            cursor: pointer;
            transition: all var(--transition-fast);
            border: none;
            gap: var(--space-xs);
        }

        .btn-primary {
            background-color: var(--color-accent);
            color: var(--color-dark);
        }

        .btn-primary:hover {
            background-color: var(--color-accent-dark);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-outline {
            background: transparent;
            border: 2px solid var(--color-accent);
            color: var(--color-accent);
        }

        .btn-outline:hover {
            background-color: var(--color-accent);
            color: var(--color-dark);
        }

        .btn-icon {
            padding: var(--space-xs);
            border-radius: 50%;
            width: 36px;
            height: 36px;
        }

        /* Badges */
        .badge {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            font-weight: 700;
            padding: 0.25rem 0.5rem;
            border-radius: 999px;
        }

        .badge-primary {
            background-color: var(--color-accent);
            color: var(--color-dark);
        }

        .badge-secondary {
            background-color: var(--color-gray);
            color: var(--color-light);
        }

        /* Hero Section */
        .hero {
            position: relative;
            min-height: 80vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: var(--space-xl) var(--space-md);
            background: 
                linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
                url('https://images.unsplash.com/photo-1483985988355-763728e1935b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') center/cover no-repeat;
            color: var(--color-light);
        }

        .hero-content {
            max-width: 800px;
        }

        .hero h1 {
            margin-bottom: var(--space-md);
        }

        .hero p {
            font-size: var(--text-lg);
            margin-bottom: var(--space-lg);
            opacity: 0.9;
        }

        /* Product Grid */
        .section {
            padding: var(--space-xl) 0;
        }

        .section-title {
            text-align: center;
            margin-bottom: var(--space-xl);
            position: relative;
        }

        .section-title::after {
            content: '';
            display: block;
            width: 80px;
            height: 3px;
            background-color: var(--color-accent);
            margin: var(--space-sm) auto 0;
        }

        .product-grid {
            display: grid;
            gap: var(--space-lg);
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        }

        .product-card {
            background: var(--color-gray);
            border-radius: var(--radius-md);
            overflow: hidden;
            transition: all var(--transition-normal);
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .product-badge {
            position: absolute;
            top: var(--space-sm);
            left: var(--space-sm);
            z-index: 2;
        }

        .product-image-container {
            position: relative;
            overflow: hidden;
            height: 300px;
        }

        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform var(--transition-slow);
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-actions {
            position: absolute;
            top: var(--space-sm);
            right: var(--space-sm);
            display: flex;
            flex-direction: column;
            gap: var(--space-xs);
            z-index: 2;
        }

        .product-info {
            padding: var(--space-md);
        }

        .product-title {
            margin-bottom: var(--space-xs);
            font-weight: 600;
        }

        .product-category {
            color: var(--color-accent);
            font-size: 0.875rem;
            margin-bottom: var(--space-xs);
        }

        .price {
            display: flex;
            align-items: center;
            gap: var(--space-sm);
            margin: var(--space-sm) 0;
        }

        .current-price {
            color: var(--color-accent);
            font-weight: 700;
            font-size: var(--text-lg);
        }

        .original-price {
            text-decoration: line-through;
            opacity: 0.7;
            font-size: 0.875rem;
        }

        .rating {
            display: flex;
            align-items: center;
            gap: var(--space-xs);
            color: var(--color-warning);
            font-size: 0.875rem;
            margin-bottom: var(--space-sm);
        }

        /* Cart */
        .cart-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--color-accent);
            color: var(--color-dark);
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            font-weight: 700;
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            opacity: 0;
            visibility: hidden;
            transition: all var(--transition-normal);
        }

        .modal.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background-color: var(--color-bg);
            border-radius: var(--radius-md);
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            padding: var(--space-lg);
            position: relative;
            transform: translateY(-50px);
            transition: transform var(--transition-normal);
        }

        .modal.active .modal-content {
            transform: translateY(0);
        }

        .modal-close {
            position: absolute;
            top: var(--space-sm);
            right: var(--space-sm);
            background: none;
            border: none;
            font-size: var(--text-xl);
            cursor: pointer;
            color: var(--color-text);
        }

        /* Forms */
        .form-group {
            margin-bottom: var(--space-md);
        }

        .form-label {
            display: block;
            margin-bottom: var(--space-xs);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: var(--space-sm);
            border: 1px solid var(--color-gray);
            border-radius: var(--radius-sm);
            background-color: var(--color-gray);
            color: var(--color-text);
            transition: border-color var(--transition-fast);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--color-accent);
        }

        .form-text {
            font-size: 0.875rem;
            margin-top: var(--space-xs);
            opacity: 0.7;
        }

        /* Auth Forms */
        .auth-form {
            max-width: 500px;
            margin: 0 auto;
        }

        .auth-switch {
            text-align: center;
            margin-top: var(--space-md);
        }

        .auth-switch a {
            color: var(--color-accent);
            font-weight: 500;
        }

        /* Cart Page */
        .cart-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: var(--space-lg);
        }

        @media (min-width: 992px) {
            .cart-container {
                grid-template-columns: 2fr 1fr;
            }
        }

        .cart-items {
            background-color: var(--color-gray);
            border-radius: var(--radius-md);
            padding: var(--space-md);
        }

        .cart-item {
            display: grid;
            grid-template-columns: 100px 1fr auto;
            gap: var(--space-md);
            padding: var(--space-md) 0;
            border-bottom: 1px solid var(--color-gray-light);
        }

        .cart-item:last-child {
            border-bottom: none;
        }

        .cart-item-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: var(--radius-sm);
        }

        .cart-item-details {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .cart-item-title {
            font-weight: 600;
            margin-bottom: var(--space-xs);
        }

        .cart-item-price {
            color: var(--color-accent);
            font-weight: 700;
        }

        .cart-item-actions {
            display: flex;
            align-items: center;
            gap: var(--space-sm);
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            border: 1px solid var(--color-gray-light);
            border-radius: var(--radius-sm);
        }

        .quantity-btn {
            background: none;
            border: none;
            padding: var(--space-xs) var(--space-sm);
            cursor: pointer;
            color: var(--color-text);
        }

        .quantity-input {
            width: 40px;
            text-align: center;
            border: none;
            background: none;
            color: var(--color-text);
        }

        .remove-item {
            background: none;
            border: none;
            color: var(--color-error);
            cursor: pointer;
        }

        .cart-summary {
            background-color: var(--color-gray);
            border-radius: var(--radius-md);
            padding: var(--space-md);
            align-self: flex-start;
            position: sticky;
            top: var(--space-lg);
        }

        .summary-title {
            margin-bottom: var(--space-md);
            padding-bottom: var(--space-sm);
            border-bottom: 1px solid var(--color-gray-light);
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: var(--space-sm);
        }

        .summary-total {
            font-weight: 700;
            font-size: var(--text-lg);
            margin: var(--space-md) 0;
        }

        /* Checkout */
        .checkout-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: var(--space-lg);
        }

        @media (min-width: 992px) {
            .checkout-container {
                grid-template-columns: 1fr 1fr;
            }
        }

        .checkout-section {
            background-color: var(--color-gray);
            border-radius: var(--radius-md);
            padding: var(--space-md);
        }

        .checkout-title {
            margin-bottom: var(--space-md);
            padding-bottom: var(--space-sm);
            border-bottom: 1px solid var(--color-gray-light);
        }

        /* Payment Methods */
        .payment-methods {
            display: flex;
            flex-direction: column;
            gap: var(--space-sm);
            margin-bottom: var(--space-md);
        }

        .payment-method {
            display: flex;
            align-items: center;
            gap: var(--space-sm);
            padding: var(--space-sm);
            border: 1px solid var(--color-gray-light);
            border-radius: var(--radius-sm);
            cursor: pointer;
            transition: all var(--transition-fast);
        }

        .payment-method:hover {
            border-color: var(--color-accent);
        }

        .payment-method.active {
            border-color: var(--color-accent);
            background-color: rgba(0, 247, 255, 0.1);
        }

        .payment-method-icon {
            font-size: var(--text-xl);
        }

        /* Footer */
        .footer {
            background-color: var(--color-darker);
            padding: var(--space-xl) 0 var(--space-md);
            margin-top: auto;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: var(--space-xl);
            margin-bottom: var(--space-lg);
        }

        .footer-logo {
            font-size: var(--text-xl);
            font-weight: 700;
            color: var(--color-accent);
            margin-bottom: var(--space-sm);
            display: flex;
            align-items: center;
            gap: var(--space-xs);
        }

        .footer-links {
            list-style: none;
        }

        .footer-links li {
            margin-bottom: var(--space-xs);
        }

        .footer-links a:hover {
            color: var(--color-accent);
        }

        .social-links {
            display: flex;
            gap: var(--space-sm);
            margin-top: var(--space-sm);
        }

        .social-link {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: var(--color-gray);
            transition: all var(--transition-fast);
        }

        .social-link:hover {
            background-color: var(--color-accent);
            color: var(--color-dark);
        }

        .copyright {
            text-align: center;
            padding-top: var(--space-md);
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 0.875rem;
            opacity: 0.7;
        }

        /* Theme Toggle */
        .theme-toggle {
            background: none;
            border: none;
            color: var(--color-text);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: var(--space-xs);
            font-size: var(--text-base);
        }

        /* Toast Notifications */
        .toast {
            position: fixed;
            bottom: var(--space-lg);
            right: var(--space-lg);
            background-color: var(--color-gray);
            color: var(--color-text);
            padding: var(--space-md);
            border-radius: var(--radius-md);
            box-shadow: var(--shadow-lg);
            display: flex;
            align-items: center;
            gap: var(--space-sm);
            z-index: 3000;
            transform: translateY(100px);
            opacity: 0;
            transition: all var(--transition-normal);
        }

        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast-success {
            border-left: 4px solid var(--color-success);
        }

        .toast-error {
            border-left: 4px solid var(--color-error);
        }

        .toast-icon {
            font-size: var(--text-xl);
        }

        .toast-close {
            background: none;
            border: none;
            color: var(--color-text);
            cursor: pointer;
            margin-left: var(--space-sm);
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: var(--space-md);
            }
            
            .nav {
                width: 100%;
                justify-content: space-between;
                margin-top: var(--space-md);
            }
            
            .nav-list {
                gap: var(--space-md);
            }
            
            .hero {
                min-height: 60vh;
            }
            
            .product-grid {
                grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            }
            
            .cart-item {
                grid-template-columns: 80px 1fr;
                grid-template-rows: auto auto;
            }
            
            .cart-item-actions {
                grid-column: 1 / -1;
                justify-content: flex-end;
            }
        }

        @media (max-width: 480px) {
            .nav-list {
                flex-direction: column;
                align-items: center;
                gap: var(--space-sm);
            }
            
            .hero h1 {
                font-size: var(--text-3xl);
            }
            
            .product-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="index.html" class="logo">
                    <i class="fas fa-tshirt"></i>
                    <span>MEETA</span>
                </a>
                
                <nav class="nav">
                    <ul class="nav-list">
                        <li><a href="index.html" class="nav-link">Home</a></li>
                        <li><a href="shop.html" class="nav-link">Shop</a></li>
                        <li><a href="collections.html" class="nav-link">Collections</a></li>
                        <li><a href="about.html" class="nav-link">About</a></li>
                    </ul>
                </nav>
                
                <div class="user-actions">
                    <button class="btn btn-icon theme-toggle" id="themeToggle">
                        <i class="fas fa-moon"></i>
                    </button>
                    <button class="btn btn-icon" id="authBtn">
                        <i class="fas fa-user"></i>
                    </button>
                    <button class="btn btn-icon" id="cartBtn">
                        <i class="fas fa-shopping-cart"></i>
                        <span class="cart-count" id="cartCount">0</span>
                    </button>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        <!-- Hero Section -->
        <section class="hero">
            <div class="hero-content">
                <h1>Step into the Future of Fashion</h1>
                <p>Minimal. Bold. Smart. Discover our 2025 collection featuring cutting-edge designs and sustainable materials.</p>
                <a href="shop.html" class="btn btn-primary">Shop Now</a>
            </div>
        </section>

        <!-- Featured Products -->
        <section class="section">
            <div class="container">
                <h2 class="section-title">Featured Products</h2>
                <div class="product-grid" id="featuredProducts">
                    <!-- Products will be loaded here via JavaScript -->
                </div>
            </div>
        </section>

        <!-- Collections -->
        <section class="section">
            <div class="container">
                <h2 class="section-title">Our Collections</h2>
                <div class="product-grid" id="collections">
                    <!-- Collections will be loaded here via JavaScript -->
                </div>
            </div>
        </section>

        <!-- Newsletter -->
        <section class="section newsletter">
            <div class="container">
                <h2>Subscribe to Our Newsletter</h2>
                <p>Get the latest updates on new arrivals, special offers, and fashion trends.</p>
                <form class="newsletter-form" id="newsletterForm">
                    <input type="email" placeholder="Your email address" class="form-control" required>
                    <button type="submit" class="btn btn-primary">Subscribe</button>
                </form>
            </div>
        </section>
    </main>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-col">
                    <div class="footer-logo">
                        <i class="fas fa-tshirt"></i>
                        <span>MEETA</span>
                    </div>
                    <p>Futuristic fashion for the modern individual. Sustainable, stylish, and smart.</p>
                    <div class="social-links">
                        <a href="#" class="social-link"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-pinterest-p"></i></a>
                    </div>
                </div>
                
                <div class="footer-col">
                    <h4>Shop</h4>
                    <ul class="footer-links">
                        <li><a href="#">New Arrivals</a></li>
                        <li><a href="#">Best Sellers</a></li>
                        <li><a href="#">Men's Collection</a></li>
                        <li><a href="#">Women's Collection</a></li>
                        <li><a href="#">Accessories</a></li>
                    </ul>
                </div>
                
                <div class="footer-col">
                    <h4>Company</h4>
                    <ul class="footer-links">
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">Sustainability</a></li>
                        <li><a href="#">Careers</a></li>
                        <li><a href="#">Press</a></li>
                        <li><a href="#">Contact Us</a></li>
                    </ul>
                </div>
                
                <div class="footer-col">
                    <h4>Help</h4>
                    <ul class="footer-links">
                        <li><a href="#">Customer Service</a></li>
                        <li><a href="#">Shipping Policy</a></li>
                        <li><a href="#">Returns & Exchanges</a></li>
                        <li><a href="#">Size Guide</a></li>
                        <li><a href="#">FAQs</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                <p>&copy; 2025 2025 WEAR. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Auth Modal -->
    <div class="modal" id="authModal">
        <div class="modal-content">
            <button class="modal-close" id="authModalClose">&times;</button>
            <div id="authForms">
                <!-- Login Form -->
                <form class="auth-form" id="loginForm" style="display: block;">
                    <h3>Login</h3>
                    <div class="form-group">
                        <label for="loginEmail" class="form-label">Email</label>
                        <input type="email" id="loginEmail" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="loginPassword" class="form-label">Password</label>
                        <input type="password" id="loginPassword" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="width: 100%;">Login</button>
                    <div class="auth-switch">
                        Don't have an account? <a href="#" id="showRegister">Register</a>
                    </div>
                </form>
                
                <!-- Register Form -->
                <form class="auth-form" id="registerForm" style="display: none;">
                    <h3>Register</h3>
                    <div class="form-group">
                        <label for="registerName" class="form-label">Full Name</label>
                        <input type="text" id="registerName" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="registerEmail" class="form-label">Email</label>
                        <input type="email" id="registerEmail" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="registerPassword" class="form-label">Password</label>
                        <input type="password" id="registerPassword" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="registerConfirm" class="form-label">Confirm Password</label>
                        <input type="password" id="registerConfirm" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="width: 100%;">Register</button>
                    <div class="auth-switch">
                        Already have an account? <a href="#" id="showLogin">Login</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Cart Modal -->
    <div class="modal" id="cartModal">
        <div class="modal-content">
            <button class="modal-close" id="cartModalClose">&times;</button>
            <h3>Your Cart</h3>
            <div class="cart-container">
                <div class="cart-items" id="cartItems">
                    <!-- Cart items will be loaded here -->
                    <div class="empty-cart">
                        <p>Your cart is empty</p>
                        <a href="shop.html" class="btn btn-primary">Continue Shopping</a>
                    </div>
                </div>
                
                <div class="cart-summary">
                    <h4 class="summary-title">Order Summary</h4>
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span id="cartSubtotal">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping</span>
                        <span id="cartShipping">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Tax</span>
                        <span id="cartTax">$0.00</span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total</span>
                        <span id="cartTotal">$0.00</span>
                    </div>
                    <button class="btn btn-primary" style="width: 100%;" id="checkoutBtn">Checkout</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Checkout Modal -->
    <div class="modal" id="checkoutModal">
        <div class="modal-content">
            <button class="modal-close" id="checkoutModalClose">&times;</button>
            <h3>Checkout</h3>
            <div class="checkout-container">
                <div class="checkout-section">
                    <h4 class="checkout-title">Shipping Information</h4>
                    <form id="shippingForm">
                        <div class="form-group">
                            <label for="shippingName" class="form-label">Full Name</label>
                            <input type="text" id="shippingName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="shippingEmail" class="form-label">Email</label>
                            <input type="email" id="shippingEmail" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="shippingAddress" class="form-label">Address</label>
                            <input type="text" id="shippingAddress" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="shippingCity" class="form-label">City</label>
                            <input type="text" id="shippingCity" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="shippingCountry" class="form-label">Country</label>
                            <select id="shippingCountry" class="form-control" required>
                                <option value="">Select Country</option>
                                <option value="US">United States</option>
                                <option value="CA">Canada</option>
                                <option value="UK">United Kingdom</option>
                                <option value="AU">Australia</option>
                                <option value="DE">Germany</option>
                                <option value="FR">France</option>
                                <option value="JP">Japan</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="shippingZip" class="form-label">ZIP Code</label>
                            <input type="text" id="shippingZip" class="form-control" required>
                        </div>
                    </form>
                    
                    <h4 class="checkout-title" style="margin-top: var(--space-xl);">Payment Method</h4>
                    <div class="payment-methods">
                        <div class="payment-method active" data-method="credit">
                            <i class="far fa-credit-card payment-method-icon"></i>
                            <span>Credit Card</span>
                        </div>
                        <div class="payment-method" data-method="paypal">
                            <i class="fab fa-paypal payment-method-icon"></i>
                            <span>PayPal</span>
                        </div>
                        <div class="payment-method" data-method="applepay">
                            <i class="fab fa-apple payment-method-icon"></i>
                            <span>Apple Pay</span>
                        </div>
                    </div>
                    
                    <div id="creditCardForm" style="margin-top: var(--space-md);">
                        <div class="form-group">
                            <label for="cardNumber" class="form-label">Card Number</label>
                            <input type="text" id="cardNumber" class="form-control" placeholder="1234 5678 9012 3456">
                        </div>
                        <div class="form-group">
                            <label for="cardName" class="form-label">Name on Card</label>
                            <input type="text" id="cardName" class="form-control">
                        </div>
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: var(--space-md);">
                            <div class="form-group">
                                <label for="cardExpiry" class="form-label">Expiry Date</label>
                                <input type="text" id="cardExpiry" class="form-control" placeholder="MM/YY">
                            </div>
                            <div class="form-group">
                                <label for="cardCvv" class="form-label">CVV</label>
                                <input type="text" id="cardCvv" class="form-control" placeholder="123">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="checkout-section">
                    <h4 class="checkout-title">Order Summary</h4>
                    <div id="checkoutItems">
                        <!-- Order items will be loaded here -->
                    </div>
                    
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span id="checkoutSubtotal">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping</span>
                        <span id="checkoutShipping">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Tax</span>
                        <span id="checkoutTax">$0.00</span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total</span>
                        <span id="checkoutTotal">$0.00</span>
                    </div>
                    
                    <div class="form-group" style="margin-top: var(--space-md);">
                        <input type="checkbox" id="termsAgree">
                        <label for="termsAgree">I agree to the <a href="#">Terms & Conditions</a></label>
                    </div>
                    
                    <button class="btn btn-primary" style="width: 100%; margin-top: var(--space-md);" id="placeOrderBtn">Place Order</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Order Confirmation Modal -->
    <div class="modal" id="confirmationModal">
        <div class="modal-content" style="text-align: center; max-width: 500px;">
            <button class="modal-close" id="confirmationModalClose">&times;</button>
            <div style="font-size: 4rem; color: var(--color-success); margin-bottom: var(--space-md);">
                <i class="fas fa-check-circle"></i>
            </div>
            <h3>Order Confirmed!</h3>
            <p style="margin-bottom: var(--space-md);">Thank you for your purchase. Your order has been placed successfully.</p>
            <p style="margin-bottom: var(--space-xl); font-weight: 500;">Order #<span id="orderNumber">12345</span></p>
            <div style="display: flex; gap: var(--space-md); justify-content: center;">
                <a href="index.html" class="btn btn-outline">Continue Shopping</a>
                <a href="order.html" class="btn btn-primary">View Order</a>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast" id="toast">
        <i class="fas fa-check-circle toast-icon"></i>
        <div class="toast-content">
            <div class="toast-message" id="toastMessage">Product added to cart</div>
        </div>
        <button class="toast-close">&times;</button>
    </div>

    <script>
        // DOM Elements
        const themeToggle = document.getElementById('themeToggle');
        const authBtn = document.getElementById('authBtn');
        const cartBtn = document.getElementById('cartBtn');
        const cartCount = document.getElementById('cartCount');
        const authModal = document.getElementById('authModal');
        const authModalClose = document.getElementById('authModalClose');
        const cartModal = document.getElementById('cartModal');
        const cartModalClose = document.getElementById('cartModalClose');
        const checkoutModal = document.getElementById('checkoutModal');
        const checkoutModalClose = document.getElementById('checkoutModalClose');
        const confirmationModal = document.getElementById('confirmationModal');
        const confirmationModalClose = document.getElementById('confirmationModalClose');
        const showLogin = document.getElementById('showLogin');
        const showRegister = document.getElementById('showRegister');
        const loginForm = document.getElementById('loginForm');
        const registerForm = document.getElementById('registerForm');
        const checkoutBtn = document.getElementById('checkoutBtn');
        const placeOrderBtn = document.getElementById('placeOrderBtn');
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toastMessage');
        const toastClose = document.querySelector('.toast-close');
        const paymentMethods = document.querySelectorAll('.payment-method');
        const creditCardForm = document.getElementById('creditCardForm');
        const newsletterForm = document.getElementById('newsletterForm');
        const featuredProducts = document.getElementById('featuredProducts');
        const collections = document.getElementById('collections');
        const cartItems = document.getElementById('cartItems');
        const checkoutItems = document.getElementById('checkoutItems');

        // App State
        let currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        let products = [];
        let collectionsData = [];

        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            loadProducts();
            loadCollections();
            updateCartCount();
            checkTheme();
            setupEventListeners();
            
            // Check if user is logged in
            if (currentUser) {
                updateAuthState();
            }
        });

        // Load products from "API"
        function loadProducts() {
            // In a real app, this would be an API call
            products = [
                {
                    id: 1,
                    name: "Neon Future Jacket",
                    price: 129.99,
                    originalPrice: 159.99,
                    category: "Jackets",
                    image: "https://images.unsplash.com/photo-1551232864-3f0890e580d9?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    rating: 4.5,
                    isNew: true,
                    colors: ["#00f7ff", "#ff00f7", "#f7ff00"]
                },
                {
                    id: 2,
                    name: "Smart Tech Hoodie",
                    price: 89.99,
                    originalPrice: 109.99,
                    category: "Hoodies",
                    image: "https://images.unsplash.com/photo-1527719327859-c6ce80353573?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    rating: 4.2,
                    colors: ["#111111", "#444444", "#777777"]
                },
                {
                    id: 3,
                    name: "Cyberpunk Pants",
                    price: 79.99,
                    originalPrice: 99.99,
                    category: "Pants",
                    image: "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    rating: 4.0,
                    isNew: true,
                    colors: ["#000000", "#333333", "#666666"]
                },
                {
                    id: 4,
                    name: "Holographic Tee",
                    price: 49.99,
                    originalPrice: 59.99,
                    category: "T-Shirts",
                    image: "https://images.unsplash.com/photo-1529374255404-311a2a4f1fd9?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    rating: 4.7,
                    colors: ["#00f7ff", "#ff00f7", "#f7ff00"]
                }
            ];
            
            renderProducts();
        }

        // Load collections from "API"
        function loadCollections() {
            // In a real app, this would be an API call
            collectionsData = [
                {
                    id: 1,
                    name: "Cyber Collection",
                    image: "https://images.unsplash.com/photo-1483985988355-763728e1935b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                    items: 12
                },
                {
                    id: 2,
                    name: "Neon Nights",
                    image: "https://images.unsplash.com/photo-1558769132-cb1aea458c5e?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    items: 8
                },
                {
                    id: 3,
                    name: "Urban Techwear",
                    image: "https://images.unsplash.com/photo-1551232864-3f0890e580d9?ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80",
                    items: 15
                }
            ];
            
            renderCollections();
        }

        // Render products to the DOM
        function renderProducts() {
            featuredProducts.innerHTML = '';
            
            products.forEach(product => {
                const productEl = document.createElement('div');
                productEl.className = 'product-card';
                productEl.innerHTML = `
                    ${product.isNew ? `<span class="badge badge-primary product-badge">New</span>` : ''}
                    <div class="product-image-container">
                        <img src="${product.image}" alt="${product.name}" class="product-image">
                        <div class="product-actions">
                            <button class="btn btn-icon" onclick="addToWishlist(${product.id})">
                                <i class="far fa-heart"></i>
                            </button>
                            <button class="btn btn-icon" onclick="quickView(${product.id})">
                                <i class="far fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="product-info">
                        <span class="product-category">${product.category}</span>
                        <h3 class="product-title">${product.name}</h3>
                        <div class="price">
                            <span class="current-price">$${product.price.toFixed(2)}</span>
                            ${product.originalPrice ? `<span class="original-price">$${product.originalPrice.toFixed(2)}</span>` : ''}
                        </div>
                        <div class="rating">
                            <i class="fas fa-star"></i>
                            <span>${product.rating}</span>
                        </div>
                        <button class="btn btn-primary" onclick="addToCart(${product.id})">Add to Cart</button>
                    </div>
                `;
                
                featuredProducts.appendChild(productEl);
            });
        }

        // Render collections to the DOM
        function renderCollections() {
            collections.innerHTML = '';
            
            collectionsData.forEach(collection => {
                const collectionEl = document.createElement('div');
                collectionEl.className = 'product-card';
                collectionEl.innerHTML = `
                    <div class="product-image-container">
                        <img src="${collection.image}" alt="${collection.name}" class="product-image">
                    </div>
                    <div class="product-info">
                        <h3 class="product-title">${collection.name}</h3>
                        <p>${collection.items} items</p>
                        <a href="collection.html?id=${collection.id}" class="btn btn-outline">View Collection</a>
                    </div>
                `;
                
                collections.appendChild(collectionEl);
            });
        }

        // Setup event listeners
        function setupEventListeners() {
            // Theme toggle
            themeToggle.addEventListener('click', toggleTheme);
            
            // Auth modal
            authBtn.addEventListener('click', () => toggleModal(authModal));
            authModalClose.addEventListener('click', () => toggleModal(authModal));
            
            // Cart modal
            cartBtn.addEventListener('click', () => {
                toggleModal(cartModal);
                renderCartItems();
            });
            cartModalClose.addEventListener('click', () => toggleModal(cartModal));
            
            // Checkout modal
            checkoutBtn.addEventListener('click', () => {
                toggleModal(cartModal);
                toggleModal(checkoutModal);
                renderCheckoutItems();
                calculateTotals();
            });
            checkoutModalClose.addEventListener('click', () => toggleModal(checkoutModal));
            
            // Confirmation modal
            confirmationModalClose.addEventListener('click', () => toggleModal(confirmationModal));
            
            // Auth forms toggle
            showLogin.addEventListener('click', (e) => {
                e.preventDefault();
                loginForm.style.display = 'block';
                registerForm.style.display = 'none';
            });
            
            showRegister.addEventListener('click', (e) => {
                e.preventDefault();
                loginForm.style.display = 'none';
                registerForm.style.display = 'block';
            });
            
            // Login form
            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const email = document.getElementById('loginEmail').value;
                const password = document.getElementById('loginPassword').value;
                
                // In a real app, this would validate against your backend
                if (email && password) {
                    currentUser = {
                        email,
                        name: email.split('@')[0]
                    };
                    localStorage.setItem('currentUser', JSON.stringify(currentUser));
                    updateAuthState();
                    toggleModal(authModal);
                    showToast('Logged in successfully');
                } else {
                    showToast('Please fill all fields', 'error');
                }
            });
            
            // Register form
            registerForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const name = document.getElementById('registerName').value;
                const email = document.getElementById('registerEmail').value;
                const password = document.getElementById('registerPassword').value;
                const confirm = document.getElementById('registerConfirm').value;
                
                if (password !== confirm) {
                    showToast('Passwords do not match', 'error');
                    return;
                }
                
                if (name && email && password) {
                    currentUser = {
                        email,
                        name
                    };
                    localStorage.setItem('currentUser', JSON.stringify(currentUser));
                    updateAuthState();
                    toggleModal(authModal);
                    showToast('Account created successfully');
                } else {
                    showToast('Please fill all fields', 'error');
                }
            });
            
            // Payment methods
            paymentMethods.forEach(method => {
                method.addEventListener('click', () => {
                    paymentMethods.forEach(m => m.classList.remove('active'));
                    method.classList.add('active');
                    
                    // In a real app, you'd show different forms for each payment method
                    if (method.dataset.method === 'credit') {
                        creditCardForm.style.display = 'block';
                    } else {
                        creditCardForm.style.display = 'none';
                    }
                });
            });
            
            // Place order
            placeOrderBtn.addEventListener('click', () => {
                if (!document.getElementById('termsAgree').checked) {
                    showToast('Please agree to the terms and conditions', 'error');
                    return;
                }
                
                // In a real app, this would process the payment
                toggleModal(checkoutModal);
                
                // Generate random order number
                const orderNumber = Math.floor(Math.random() * 90000) + 10000;
                document.getElementById('orderNumber').textContent = orderNumber;
                
                // Clear cart
                cart = [];
                localStorage.setItem('cart', JSON.stringify(cart));
                updateCartCount();
                
                toggleModal(confirmationModal);
            });
            
            // Newsletter
            newsletterForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const email = e.target.querySelector('input').value;
                
                if (email) {
                    showToast('Thanks for subscribing!');
                    e.target.reset();
                }
            });
            
            // Toast close
            toastClose.addEventListener('click', () => {
                toast.classList.remove('show');
            });
        }

        // Toggle modal
        function toggleModal(modal) {
            modal.classList.toggle('active');
            document.body.style.overflow = modal.classList.contains('active') ? 'hidden' : '';
        }

        // Toggle theme
        function toggleTheme() {
            const isDark = document.body.getAttribute('data-theme') === 'light';
            document.body.setAttribute('data-theme', isDark ? 'dark' : 'light');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            
            // Update icon
            themeToggle.innerHTML = isDark ? 
                '<i class="fas fa-moon"></i>' : 
                '<i class="fas fa-sun"></i>';
        }

        // Check saved theme
        function checkTheme() {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            document.body.setAttribute('data-theme', savedTheme);
            
            // Set correct icon
            themeToggle.innerHTML = savedTheme === 'dark' ? 
                '<i class="fas fa-moon"></i>' : 
                '<i class="fas fa-sun"></i>';
        }

        // Update auth state
        function updateAuthState() {
            if (currentUser) {
                authBtn.innerHTML = `<i class="fas fa-user"></i> ${currentUser.name}`;
            } else {
                authBtn.innerHTML = '<i class="fas fa-user"></i>';
            }
        }

        // Add to cart
        function addToCart(productId) {
            if (!currentUser) {
                showToast('Please login to add items to cart', 'error');
                toggleModal(authModal);
                return;
            }
            
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            const existingItem = cart.find(item => item.id === productId);
            
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({
                    id: product.id,
                    name: product.name,
                    price: product.price,
                    image: product.image,
                    quantity: 1
                });
            }
            
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartCount();
            showToast(`${product.name} added to cart`);
        }

        // Render cart items
        function renderCartItems() {
            if (cart.length === 0) {
                cartItems.innerHTML = `
                    <div class="empty-cart">
                        <p>Your cart is empty</p>
                        <a href="shop.html" class="btn btn-primary">Continue Shopping</a>
                    </div>
                `;
                return;
            }
            
            cartItems.innerHTML = '';
            
            cart.forEach(item => {
                const cartItemEl = document.createElement('div');
                cartItemEl.className = 'cart-item';
                cartItemEl.innerHTML = `
                    <img src="${item.image}" alt="${item.name}" class="cart-item-image">
                    <div class="cart-item-details">
                        <h4 class="cart-item-title">${item.name}</h4>
                        <span class="cart-item-price">$${item.price.toFixed(2)}</span>
                    </div>
                    <div class="cart-item-actions">
                        <div class="quantity-selector">
                            <button class="quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity - 1})">-</button>
                            <input type="text" class="quantity-input" value="${item.quantity}" readonly>
                            <button class="quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity + 1})">+</button>
                        </div>
                        <button class="remove-item" onclick="removeFromCart(${item.id})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                `;
                
                cartItems.appendChild(cartItemEl);
            });
            
            calculateTotals();
        }

        // Render checkout items
        function renderCheckoutItems() {
            checkoutItems.innerHTML = '';
            
            cart.forEach(item => {
                const checkoutItemEl = document.createElement('div');
                checkoutItemEl.className = 'cart-item';
                checkoutItemEl.innerHTML = `
                    <img src="${item.image}" alt="${item.name}" class="cart-item-image">
                    <div class="cart-item-details">
                        <h4 class="cart-item-title">${item.name}</h4>
                        <span class="cart-item-price">$${item.price.toFixed(2)}</span>
                        <span>Qty: ${item.quantity}</span>
                    </div>
                    <div class="cart-item-price">
                        $${(item.price * item.quantity).toFixed(2)}
                    </div>
                `;
                
                checkoutItems.appendChild(checkoutItemEl);
            });
        }

        // Calculate cart totals
        function calculateTotals() {
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            const shipping = subtotal > 100 ? 0 : 10;
            const tax = subtotal * 0.1; // 10% tax
            
            document.getElementById('cartSubtotal').textContent = `$${subtotal.toFixed(2)}`;
            document.getElementById('cartShipping').textContent = `$${shipping.toFixed(2)}`;
            document.getElementById('cartTax').textContent = `$${tax.toFixed(2)}`;
            document.getElementById('cartTotal').textContent = `$${(subtotal + shipping + tax).toFixed(2)}`;
            
            document.getElementById('checkoutSubtotal').textContent = `$${subtotal.toFixed(2)}`;
            document.getElementById('checkoutShipping').textContent = `$${shipping.toFixed(2)}`;
            document.getElementById('checkoutTax').textContent = `$${tax.toFixed(2)}`;
            document.getElementById('checkoutTotal').textContent = `$${(subtotal + shipping + tax).toFixed(2)}`;
        }

        // Update quantity
        function updateQuantity(productId, newQuantity) {
            if (newQuantity < 1) {
                removeFromCart(productId);
                return;
            }
            
            const item = cart.find(item => item.id === productId);
            if (item) {
                item.quantity = newQuantity;
                localStorage.setItem('cart', JSON.stringify(cart));
                renderCartItems();
                updateCartCount();
            }
        }

        // Remove from cart
        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            localStorage.setItem('cart', JSON.stringify(cart));
            renderCartItems();
            updateCartCount();
            
            if (cart.length === 0) {
                toggleModal(cartModal);
            }
        }

        // Update cart count
        function updateCartCount() {
            const count = cart.reduce((sum, item) => sum + item.quantity, 0);
            cartCount.textContent = count;
        }

        // Show toast notification
        function showToast(message, type = 'success') {
            toast.className = `toast toast-${type}`;
            toastMessage.textContent = message;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        // Quick view product (would be implemented in a real app)
        function quickView(productId) {
            showToast('Quick view feature would show product details', 'info');
        }

        // Add to wishlist (would be implemented in a real app)
        function addToWishlist(productId) {
            if (!currentUser) {
                showToast('Please login to add items to wishlist', 'error');
                toggleModal(authModal);
                return;
            }
            
            showToast('Added to wishlist');
        }

        // Logout function (not implemented in UI)
        function logout() {
            currentUser = null;
            localStorage.removeItem('currentUser');
            updateAuthState();
            showToast('Logged out successfully');
        }

        // Make functions available globally
        window.addToCart = addToCart;
        window.updateQuantity = updateQuantity;
        window.removeFromCart = removeFromCart;
        window.quickView = quickView;
        window.addToWishlist = addToWishlist;
    </script>
</body>
</html>
